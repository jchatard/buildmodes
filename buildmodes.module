<?php

/**
 * Implementation of hook_menu()
 */
function buildmodes_menu() {
  $items = array();
  
  $items['admin/build/buildmodes'] = array(
    'title' => 'Build modes',
    'description' => 'List, edit, or add build modes to your nodes',
    'page callback' => 'buildmodes_overview',
    'access arguments' => array('administer buildmodes'),
    'file' => 'buildmodes.admin.inc',
  );
  $items['admin/build/buildmodes/list'] = array(
    'title' => 'List',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -10,
  );
  
  $items['admin/build/buildmodes/add'] = array(
    'title' => 'Add build mode',
    'description' => 'Add a new build mode',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('buildmodes_form'),
    'access arguments' => array('administer buildmodes'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'buildmodes.admin.inc',
  );
  $items['admin/build/buildmodes/%buildmode/edit'] = array(
    'title' => 'Edit build mode',
    'description' => 'Edit a build mode',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('buildmodes_form', 3),
    'access arguments' => array('administer buildmodes'),
    'file' => 'buildmodes.admin.inc',
  );
  $items['admin/build/buildmodes/%buildmode/delete'] = array(
    'title' => 'Delete build mode',
    'description' => 'Delete a build mode',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('buildmodes_delete_confirm', 3),
    'access arguments' => array('administer buildmodes'),
    'file' => 'buildmodes.admin.inc',
  );
  return $items;
}

/**
 * Implementation of hook_content_build_modes()
 * from content.module (CCK)
 */
function buildmodes_content_build_modes() {
  $buildmodes = array(
    'buildmodes' => array(
      'title' => t('Build modes'),
    ),
  );

  $buildmodes['buildmodes']['build modes'] = buildmodes_list_modes();

  return $buildmodes;
}

/**
 * Returns the list of user defined build modes
 * 
 * @param $reset
 *   (optional) Refresh the static variable?
 * @return
 *   Array TODO
 */
function buildmodes_list_modes($reset = FALSE) {
  static $buildmodes;

  if ($reset || !isset($buildmodes)) {
    $buildmodes = variable_get('buildmodes_modes', array());
    // For convinience prupose we sort by alpha keys
    ksort($buildmodes);
  }

  return $buildmodes;
}

/**
 * Loads a single buildmode based on a system name
 */
function buildmode_load($name) {
  $buildmodes = buildmodes_list_modes();
  if ($buildmodes[$name]) {
    $buildmodes[$name]['name'] = $name;
    return $buildmodes[$name];
  }
  else {
    return FALSE;
  }
}

/**
 * Preprocess function for template suggestions
 */
function buildmodes_preprocess_node(&$vars) {
  if ($vars['build_mode']) {
    // TODO prereg replace '_' -> '-'
    // populate build_mode with teaser and full?
    $vars['template_files'][] = 'node-'. $vars['build_mode'];
    $vars['template_files'][] = 'node-'. $vars['type'] .'-'. $vars['build_mode'];
  }
}